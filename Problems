< c++ >
//To add two numbers 

#include<iostream>
using namespace std;
int main()
{
    int T;
    cin>>T;
    for(int i=0;i<T;i++)
      { int a,b; cin>>a,b;
      cout<<a+b<<endl;
      }
}

// To calculate area of rectangle

#include<bits/stdc++.h>
using namespace std;
int main(){
    int a,b;
    cin>>a>>b;
    cout<<a * 1LL * b<<endl;
}

// To iterate each element of string
#include<bits/stdc++.h>
using namespace std;
int main(){
    string str="ehruv";
    str[0]='d';
    for(int i=0; i<str.size(); ++i){
        cout<<str[i]<<endl;
    }
    
}

// To reverse a given string

#include<bits/stdc++.h>
using namespace std;
int main(){
    string str;
    cin>>str;
    string str_rev;
    for(int i=str.size()-1; i>=0; --i){
        str_rev.push_back(str[i]);
    }
    cout<<str_rev;
}

// To exponent power of a number and find result

#include<iostream>
using namespace std;

double power(double,int=1);
int main(){
    int p;
    double x,y;
    cout<<"enter number:";
    cin>>x;
    cout<<"enter exponent:";
    cin>>p;
    y=power(x,p);
    cout<<"result is:"<<y;
    y=power(x);
    cout<<"\nresult without passing exponent is"<<y;
    
    return 0;
}
double power(double a,int b)
{
double x=1;
for(int i=0; i<b; i++)
x = x*a;
return x;
}


// To add numbers using function
#include<bits/stdc++.h>
using namespace std;

int sum(int n)
{
    int sum = 0;
    while(n){
	sum = sum + n%10;
n= n/10;
}
return sum;
}
int main(){
int a,b;
cin>>a>>b;
cout<<sum(a)<<sum(b);
}

// To access element of an array using pointer

#include <iostream>
using namespace std;
int main()
{
    int arr[10];
    arr[0] = 7;
    arr[1] = 2;
    cout<<"arr:"<<arr;
    cout<<"&arr[0]:"<<&arr[0]<<endl;
    cout<<"*arr:"<<*arr<<endl;
}


// To remove duplicate characters from the string.
		
// To find min & max element 

// using inline function

// To calculate the maximum subarray sum array[2,-4,9,3,-9]
 Algorithm
int best = 0;
for (int a = 0; a<n; a++){
	sum = 0;
	for(int i = 0; i<n; i++){
	sum += array[i];
	best = max(best,sum);
}
}
cout << best << "\n";	// time complexity of this algorithm is O(n*n)
	
	
	




